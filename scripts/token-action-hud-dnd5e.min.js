const e={ID:"token-action-hud-sw5e"},t={ID:"token-action-hud-core"},s="1.4",i={ability:"SW5E.Ability",check:"tokenActionHud.sw5e.check",condition:"tokenActionHud.sw5e.condition",effect:"SW5E.Effect",feature:"ITEM.TypeFeat",item:"tokenActionHud.sw5e.item",save:"SW5E.ActionSave",skill:"tokenActionHud.sw5e.skill",power:"ITEM.TypePower",utility:"SW5E.ActionUtil"},n={bonus:"fas fa-plus",crew:"fas fa-users",day:"fas fa-hourglass-end",hour:"fas fa-hourglass-half",lair:"fas fa-home",minute:"fas fa-hourglass-start",legendary:"fas fas fa-dragon",reaction:"fas fa-bolt",special:"fas fa-star"},l="fas fa-circle-c",a="fas fa-sun",o="fas fa-circle-r",c={.5:"fas fa-adjust",1:"fas fa-check",2:"fas fa-check-double"},d={_1stLevelPowers:{id:"1st-level-powers",name:"tokenActionHud.sw5e.1stLevelPowers",type:"system"},_2ndLevelPowers:{id:"2nd-level-powers",name:"tokenActionHud.sw5e.2ndLevelPowers",type:"system"},_3rdLevelPowers:{id:"3rd-level-powers",name:"tokenActionHud.sw5e.3rdLevelPowers",type:"system"},_4thLevelPowers:{id:"4th-level-powers",name:"tokenActionHud.sw5e.4thLevelPowers",type:"system"},_5thLevelPowers:{id:"5th-level-powers",name:"tokenActionHud.sw5e.5thLevelPowers",type:"system"},_6thLevelPowers:{id:"6th-level-powers",name:"tokenActionHud.sw5e.6thLevelPowers",type:"system"},_7thLevelPowers:{id:"7th-level-powers",name:"tokenActionHud.sw5e.7thLevelPowers",type:"system"},_8thLevelPowers:{id:"8th-level-powers",name:"tokenActionHud.sw5e.8thLevelPowers",type:"system"},_9thLevelPowers:{id:"9th-level-powers",name:"tokenActionHud.sw5e.9thLevelPowers",type:"system"},abilities:{id:"abilities",name:"tokenActionHud.sw5e.abilities",type:"system"},actions:{id:"actions",name:"SW5E.ActionPl",type:"system"},activeFeatures:{id:"active-features",name:"tokenActionHud.sw5e.activeFeatures",type:"system"},artificerInfusions:{id:"artificer-infusions",name:"tokenActionHud.sw5e.artificerInfusions",type:"system"},atWillPowers:{id:"at-will-powers",name:"tokenActionHud.sw5e.atWillPowers",type:"system"},backgroundFeatures:{id:"background-features",name:"tokenActionHud.sw5e.backgroundFeatures",type:"system"},bonusActions:{id:"bonus-actions",name:"tokenActionHud.sw5e.bonusActions",type:"system"},cantrips:{id:"cantrips",name:"tokenActionHud.sw5e.cantrips",type:"system"},channelDivinity:{id:"channel-divinity",name:"tokenActionHud.sw5e.channelDivinity",type:"system"},checks:{id:"checks",name:"tokenActionHud.sw5e.checks",type:"system"},classFeatures:{id:"class-features",name:"tokenActionHud.sw5e.classFeatures",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},conditions:{id:"conditions",name:"tokenActionHud.sw5e.conditions",type:"system"},consumables:{id:"consumables",name:"ITEM.TypeConsumablePl",type:"system"},containers:{id:"containers",name:"ITEM.TypeContainerPl",type:"system"},crewActions:{id:"crew-actions",name:"tokenActionHud.sw5e.crewActions",type:"system"},defensiveTactics:{id:"defensive-tactics",name:"tokenActionHud.sw5e.defensiveTactics",type:"system"},eldritchInvocations:{id:"eldritch-invocations",name:"tokenActionHud.sw5e.eldritchInvocations",type:"system"},elementalDisciplines:{id:"elemental-disciplines",name:"tokenActionHud.sw5e.elementalDisciplines",type:"system"},equipment:{id:"equipment",name:"ITEM.TypeEquipmentPl",type:"system"},equipped:{id:"equipped",name:"SW5E.Equipped",type:"system"},feats:{id:"feats",name:"tokenActionHud.sw5e.feats",type:"system"},fightingStyles:{id:"fighting-styles",name:"tokenActionHud.sw5e.fightingStyles",type:"system"},huntersPrey:{id:"hunters-prey",name:"tokenActionHud.sw5e.huntersPrey",type:"system"},innatePowers:{id:"innate-powers",name:"tokenActionHud.sw5e.innatePowers",type:"system"},kiAbilities:{id:"ki-abilities",name:"tokenActionHud.sw5e.kiAbilities",type:"system"},lairActions:{id:"lair-actions",name:"tokenActionHud.sw5e.lairActions",type:"system"},legendaryActions:{id:"legendary-actions",name:"tokenActionHud.sw5e.legendaryActions",type:"system"},loot:{id:"loot",name:"ITEM.TypeLootPl",type:"system"},maneuvers:{id:"maneuvers",name:"tokenActionHud.sw5e.maneuvers",type:"system"},metamagicOptions:{id:"metamagic-options",name:"tokenActionHud.sw5e.metamagicOptions",type:"system"},monsterFeatures:{id:"monster-features",name:"tokenActionHud.sw5e.monsterFeatures",type:"system"},multiattacks:{id:"multiattacks",name:"tokenActionHud.sw5e.multiattacks",type:"system"},otherActions:{id:"other-actions",name:"tokenActionHud.sw5e.otherActions",type:"system"},pactBoons:{id:"pact-boons",name:"tokenActionHud.sw5e.pactBoons",type:"system"},pactPowers:{id:"pact-powers",name:"tokenActionHud.sw5e.pactPowers",type:"system"},passiveEffects:{id:"passive-effects",name:"SW5E.EffectPassive",type:"system"},passiveFeatures:{id:"passive-features",name:"tokenActionHud.sw5e.passiveFeatures",type:"system"},psionicPowers:{id:"psionic-powers",name:"tokenActionHud.sw5e.psionicPowers",type:"system"},speciesFeatures:{id:"species-features",name:"tokenActionHud.sw5e.speciesFeatures",type:"system"},reactions:{id:"reactions",name:"SW5E.ReactionPl",type:"system"},rests:{id:"rests",name:"tokenActionHud.sw5e.rests",type:"system"},runes:{id:"runes",name:"tokenActionHud.sw5e.runes",type:"system"},saves:{id:"saves",name:"SW5E.ClassSaves",type:"system"},skills:{id:"skills",name:"tokenActionHud.sw5e.skills",type:"system"},superiorHuntersDefense:{id:"superior-hunters-defense",name:"tokenActionHud.sw5e.superiorHuntersDefense",type:"system"},temporaryEffects:{id:"temporary-effects",name:"SW5E.EffectTemporary",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},tools:{id:"tools",name:"ITEM.TypeToolPl",type:"system"},unequipped:{id:"unequipped",name:"SW5E.Unequipped",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"},weapons:{id:"weapons",name:"ITEM.TypeWeaponPl",type:"system"}};let r=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{r=class Utils{static getSetting(s,i=null){let n=i??null;try{n=game.settings.get(e.ID,s)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}return n}static async setSetting(s,i){try{i=await game.settings.set(e.ID,s,i),t.api.Logger.debug(`Setting '${s}' set to '${i}'`)}catch{t.api.Logger.debug(`Setting '${s}' not found`)}}}}));let p=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{p=class ActionHandler extends e.api.ActionHandler{actors=null;tokens=null;actorType=null;items=null;abbreviateSkills=null;displayPowerInfo=null;showItemsWithoutActivationCosts=null;showUnchargedItems=null;showUnequippedItems=null;showUnpreparedPowers=null;activationgroupIds=null;featuregroupIds=null;inventorygroupIds=null;powergroupIds=null;featureActions=null;inventoryActions=null;powerActions=null;async buildSystemActions(t){if(this.actors=this.actor?[this.actor]:this._getActors(),this.tokens=this.token?[this.token]:this._getTokens(),this.actorType=this.actor?.type,this.actor){let t=this.actor.items;t=this._discardSlowItems(t),t=e.api.Utils.sortItemsByName(t),this.items=t}this.abbreviateSkills=r.getSetting("abbreviateSkills"),this.displayPowerInfo=r.getSetting("displayPowerInfo"),this.showItemsWithoutActivationCosts=r.getSetting("showItemsWithoutActivationCosts"),this.showUnchargedItems=r.getSetting("showUnchargedItems"),this.showUnequippedItems=r.getSetting("showUnequippedItems"),this.showUnpreparedPowers=r.getSetting("showUnpreparedPowers"),this.activationgroupIds=["actions","bonus-actions","crew-actions","lair-actions","legendary-actions","reactions","other-actions"],this.featuregroupIds=["active-features","passive-features","background-features","class-features","feats","monster-features","species-features","artificer-infusions","channel-divinity","defensive-tactics","eldritch-invocations","elemental-disciplines","fighting-styles","hunters-prey","ki-abilities","maneuvers","metamagic-options","multiattacks","pact-boons","psionic-powers","runes","superior-hunters-defense"],this.powergroupIds=["cantrips","1st-level-powers","2nd-level-powers","3rd-level-powers","4th-level-powers","5th-level-powers","6th-level-powers","7th-level-powers","8th-level-powers","9th-level-powers","at-will-powers","innate-powers","pact-powers"],"character"!==this.actorType&&"npc"!==this.actorType||(this.inventorygroupIds=["equipped","consumables","containers","equipment","loot","tools","weapons","unequipped"],this._buildCharacterActions()),"vehicle"===this.actorType&&(this.inventorygroupIds=["consumables","equipment","tools","weapons"],this._buildVehicleActions()),this.actor||this._buildMultipleTokenActions()}async _buildCharacterActions(){this._buildAbilities("ability","abilities"),this._buildAbilities("check","checks"),this._buildAbilities("save","saves"),this._buildCombat(),this._buildConditions(),this._buildEffects(),this._buildFeatures(),this._buildInventory(),this._buildRests(),this._buildSkills(),this._buildPowers(),this._buildUtility()}async _buildVehicleActions(){this._buildAbilities("ability","abilities"),this._buildAbilities("check","checks"),this._buildAbilities("save","saves"),this._buildCombat(),this._buildConditions(),this._buildEffects(),this._buildFeatures(),this._buildInventory(),this._buildUtility()}async _buildMultipleTokenActions(){this._buildAbilities("ability","abilities"),this._buildAbilities("check","checks"),this._buildAbilities("save","saves"),this._buildCombat(),this._buildConditions(),this._buildRests(),this._buildSkills(),this._buildUtility()}_buildAbilities(t,s){const n=this.actor?this.actor.system.abilities:game.sw5e.config.abilities;if(0===n.length)return;const l=Object.entries(n).filter((e=>0!==n[e[0]].value)).map((l=>{const a=l[0],o=`${t}-${l[0]}`,c=a.charAt(0).toUpperCase()+a.slice(1),d=this.abbreviateSkills?c:game.sw5e.config.abilities[a],r=`${`${e.api.Utils.i18n(i[t])}: `??""}${game.sw5e.config.abilities[a]}`;return{id:o,name:d,encodedValue:[t,a].join(this.delimiter),icon1:"checks"!==s?this._getProficiencyIcon(n[a].proficient):"",listName:r}})),a={id:s,type:"system"};this.addActions(l,a)}async buildActivations(e,t,s="item"){const i=new Map,n={actions:"action","bonus-actions":"bonus","crew-actions":"crew","lair-actions":"lair","legendary-actions":"legendary",reactions:"reaction","other-actions":"other"},l=["action","bonus","crew","lair","legendary","reaction"];for(const[t,s]of e){const e=s.system?.activation?.type,n=l.includes(e)?e:"other";i.has(n)||i.set(n,new Map),i.get(n).set(t,s)}for(const e of this.activationgroupIds){const l=n[e];if(!i.has(l))continue;const a={...t,id:`${e}+${t.id}`,type:"system-derived"},o={id:e,type:"system"};await this.addGroup(a,o),this.addGroupInfo(t),this._buildActions(i.get(l),a,s)}}_buildCombat(){const t="utility",s={initiative:{id:"initiative",name:e.api.Utils.i18n("tokenActionHud.sw5e.rollInitiative")},endTurn:{id:"endTurn",name:e.api.Utils.i18n("tokenActionHud.endTurn")}};game.combat?.current?.tokenId!==this.token?.id&&delete s.endTurn;const n=Object.entries(s).map((s=>{const n=s[1].id,l=s[1].name,a=`${`${e.api.Utils.i18n(i[t])}: `??""}${l}`,o=[t,n].join(this.delimiter),c={};let d="";if("initiative"===s[0]&&game.combat){const e=canvas.tokens.controlled.map((e=>e.id)),t=game.combat.combatants.filter((t=>e.includes(t.tokenId)));if(1===t.length){const e=t[0].initiative;c.class="tah-spotlight",c.text=e}d=`toggle${t.length>0&&t.every((e=>e?.initiative))?" active":""}`}return{id:n,name:l,encodedValue:o,info1:c,cssClass:d,listName:a}}));this.addActions(n,{id:"combat",type:"system"})}_buildConditions(){if(0===this.tokens?.length)return;const t="condition",s=CONFIG.statusEffects.filter((e=>""!==e.id));if(0===s.length)return;const n=s.map((s=>{const n=s.id,l=e.api.Utils.i18n(s.label),a=`${`${e.api.Utils.i18n(i[t])}: `??""}${l}`,o=[t,n].join(this.delimiter),c=`toggle${this.actors.every((e=>e.effects.map((e=>e.flags?.core?.statusId)).some((e=>e===n))))?" active":""}`,d=e.api.Utils.getImage(s);return{id:n,name:l,encodedValue:o,img:d,cssClass:c,listName:a}}));this.addActions(n,{id:"conditions",type:"system"})}_buildEffects(){const e="effect",t=this.actor.effects;if(0===t.size)return;const s=new Map,i=new Map;for(const e of t){const t=e.id;e.isTemporary?i.set(t,e):s.set(t,e)}this._buildActions(s,{id:"passive-effects",type:"system"},e),this._buildActions(i,{id:"temporary-effects",type:"system"},e)}_buildFeatures(){const t="feature",s=new Map;for(const[e,t]of this.items){"feat"===t.type&&s.set(e,t)}if(0===s.size)return;const i=new Map,n=[{type:"background",groupId:"background-features"},{type:"class",groupId:"class-features"},{type:"monster",groupId:"monster-features"},{type:"species",groupId:"species-features"},{type:"feats",groupId:"feats"}],l=[{type:"artificerInfusion",groupId:"artificer-infusions"},{type:"channelDivinity",groupId:"channel-divinity"},{type:"defensiveTactic",groupId:"defensive-tactics"},{type:"eldritchInvocation",groupId:"eldritch-invocations"},{type:"elementalDiscipline",groupId:"elemental-disciplines"},{type:"fightingStyle",groupId:"fighting-styles"},{type:"huntersPrey",groupId:"hunters-prey"},{type:"ki",groupId:"ki-abilities"},{type:"maneuver",groupId:"maneuvers"},{type:"metamagic",groupId:"metamagic-options"},{type:"multiattack",groupId:"multiattacks"},{type:"pact",groupId:"pact-boons"},{type:"psionicPower",groupId:"psionic-powers"},{type:"rune",groupId:"runes"},{type:"superiorHuntersDefense",groupId:"superior-hunters-defense"}];for(const[e,t]of s){const s=t.system.activation?.type,a=t.system.type.value,o=t.system.type?.subtype,c=["","lair","legendary"];s&&!c.includes(s)&&(i.has("active-features")||i.set("active-features",new Map),i.get("active-features").set(e,t)),s&&""!==s||(i.has("passive-features")||i.set("passive-features",new Map),i.get("passive-features").set(e,t));for(const s of n){const n=s.groupId;s.type===a&&(i.has(n)||i.set(n,new Map),i.get(n).set(e,t))}for(const s of l){const n=s.groupId;o&&s.type===o&&(i.has(n)||i.set(n,new Map),i.get(n).set(e,t))}}const a={"active-features":e.api.Utils.i18n("tokenActionHud.sw5e.activeFeatures"),"passive-features":e.api.Utils.i18n("tokenActionHud.sw5e.passiveFeatures")};for(const e of this.featuregroupIds){if(!i.has(e))continue;const s={id:e,name:a[e]??"",type:"system"},n=i.get(e);this._buildActions(n,s,t),a[e]&&this.buildActivations(n,s,t)}}_buildInventory(){if(0===this.items.size)return;const t=new Map;for(const[e,s]of this.items){const i=s.system.equipped,n=s.system?.quantity>0,l=this._isActiveItem(s),a=this._isUsableItem(s),o=this._isEquippedItem(s),c=s.type;n&&l&&(i&&(t.has("equipped")||t.set("equipped",new Map),t.get("equipped").set(e,s)),i||(t.has("unequipped")||t.set("unequipped",new Map),t.get("unequipped").set(e,s)),a&&"consumable"===c&&(t.has("consumables")||t.set("consumables",new Map),t.get("consumables").set(e,s)),o&&("backpack"===c&&(t.has("containers")||t.set("containers",new Map),t.get("containers").set(e,s)),"equipment"===c&&(t.has("equipment")||t.set("equipment",new Map),t.get("equipment").set(e,s)),"loot"===c&&(t.has("loot")||t.set("loot",new Map),t.get("loot").set(e,s)),"tool"===c&&(t.has("tools")||t.set("tools",new Map),t.get("tools").set(e,s)),"weapon"===c&&(t.has("weapons")||t.set("weapons",new Map),t.get("weapons").set(e,s))))}const s={equipped:e.api.Utils.i18n("SW5E.Equipped"),unequipped:e.api.Utils.i18n("SW5E.Unequipped"),consumables:e.api.Utils.i18n("ITEM.TypeConsumablePl"),containers:e.api.Utils.i18n("ITEM.TypeContainerPl"),equipment:e.api.Utils.i18n("ITEM.TypeEquipmentPl"),loot:e.api.Utils.i18n("ITEM.TypeLootPl"),tools:e.api.Utils.i18n("ITEM.TypeToolPl"),weapons:e.api.Utils.i18n("ITEM.TypeWeaponPl")};for(const e of this.inventorygroupIds){if(!t.has(e))continue;const i={id:e,name:s[e],type:"system"},n=t.get(e);this._buildActions(n,i),this.activationgroupIds&&this.buildActivations(n,i)}}_buildRests(){if(0===this.actors.length)return;if(!this.actors.every((e=>"character"===e.type)))return;const t="utility",s={shortRest:{name:e.api.Utils.i18n("SW5E.ShortRest")},longRest:{name:e.api.Utils.i18n("SW5E.LongRest")}},n=Object.entries(s).map((s=>{const n=s[0],l=s[1].name,a=`${`${e.api.Utils.i18n(i[t])}: `??""}${l}`,o=[t,n].join(this.delimiter);return{id:n,name:l,encodedValue:o,listName:a}}));this.addActions(n,{id:"rests",type:"system"})}_buildSkills(){const t="skill",s=this.actor?this.actor.system.skills:game.sw5e.config.skills;if(0===s.length)return;const n=Object.entries(s).map((n=>{try{const l=n[0],a=l.charAt(0).toUpperCase()+l.slice(1),o=this.abbreviateSkills?a:game.sw5e.config.skills[l].label,c=`${`${e.api.Utils.i18n(i[t])}: `??""}${game.sw5e.config.skills[l].label}`,d=[t,l].join(this.delimiter),r=this._getProficiencyIcon(s[l].value),p=s[l].mod;return{id:l,name:o,encodedValue:d,icon1:r,info1:this.actor?{text:p||0===p?`${p>=0?"+":""}${p}`:""}:"",listName:c}}catch(t){return e.api.Logger.error(n),null}})).filter((e=>!!e));this.addActions(n,{id:"skills",type:"system"})}_buildPowers(){const t="power",s=new Map;for(const[e,t]of this.items){if("power"===t.type){const i=this._isUsableItem(t),n=this._isUsablePower(t);if(i&&n){switch(t.system.preparation.mode){case"atwill":s.has("at-will-powers")||s.set("at-will-powers",new Map),s.get("at-will-powers").set(e,t);break;case"innate":s.has("innate-powers")||s.set("innate-powers",new Map),s.get("innate-powers").set(e,t);break;case"pact":s.has("pact-powers")||s.set("pact-powers",new Map),s.get("pact-powers").set(e,t);break;default:switch(t.system.level){case 0:s.has("cantrips")||s.set("cantrips",new Map),s.get("cantrips").set(e,t);break;case 1:s.has("1st-level-powers")||s.set("1st-level-powers",new Map),s.get("1st-level-powers").set(e,t);break;case 2:s.has("2nd-level-powers")||s.set("2nd-level-powers",new Map),s.get("2nd-level-powers").set(e,t);break;case 3:s.has("3rd-level-powers")||s.set("3rd-level-powers",new Map),s.get("3rd-level-powers").set(e,t);break;case 4:s.has("4th-level-powers")||s.set("4th-level-powers",new Map),s.get("4th-level-powers").set(e,t);break;case 5:s.has("5th-level-powers")||s.set("5th-level-powers",new Map),s.get("5th-level-powers").set(e,t);break;case 6:s.has("6th-level-powers")||s.set("6th-level-powers",new Map),s.get("6th-level-powers").set(e,t);break;case 7:s.has("7th-level-powers")||s.set("7th-level-powers",new Map),s.get("7th-level-powers").set(e,t);break;case 8:s.has("8th-level-powers")||s.set("8th-level-powers",new Map),s.get("8th-level-powers").set(e,t);break;case 9:s.has("9th-level-powers")||s.set("9th-level-powers",new Map),s.get("9th-level-powers").set(e,t)}}}}}const i=Object.entries(this.actor.system.powers).reverse();let n=null;const l=[];let a=this.showUnchargedItems,o=this.showUnchargedItems;for(const[e,t]of i){const s=t.value>0,i=t.max>0,c=t.level>0;"pact"===e&&(!o&&s&&i&&c&&(o=!0),c||(o=!1),t.slotAvailable=o,n=[e,t]),e.startsWith("power")&&"power0"!==e?(!a&&s&&i&&(a=!0),t.slotAvailable=a,l.push([e,t])):s&&(t.slotsAvailable=!0,l.push(e,t))}if(n[1].slotAvailable){const e=l.findIndex((e=>e[0]==="power"+n[1].level));l[e][1].slotsAvailable=!0}const c={"1st-level-powers":{powerMode:1,name:e.api.Utils.i18n("tokenActionHud.sw5e.1stLevelPowers")},"2nd-level-powers":{powerMode:2,name:e.api.Utils.i18n("tokenActionHud.sw5e.2ndLevelPowers")},"3rd-level-powers":{powerMode:3,name:e.api.Utils.i18n("tokenActionHud.sw5e.3rdLevelPowers")},"4th-level-powers":{powerMode:4,name:e.api.Utils.i18n("tokenActionHud.sw5e.4thLevelPowers")},"5th-level-powers":{powerMode:5,name:e.api.Utils.i18n("tokenActionHud.sw5e.5thLevelPowers")},"6th-level-powers":{powerMode:6,name:e.api.Utils.i18n("tokenActionHud.sw5e.6thLevelPowers")},"7th-level-powers":{powerMode:7,name:e.api.Utils.i18n("tokenActionHud.sw5e.7thLevelPowers")},"8th-level-powers":{powerMode:8,name:e.api.Utils.i18n("tokenActionHud.sw5e.8thLevelPowers")},"9th-level-powers":{powerMode:9,name:e.api.Utils.i18n("tokenActionHud.sw5e.9thLevelPowers")},"at-will-powers":{powerMode:"atwill",name:e.api.Utils.i18n("tokenActionHud.sw5e.atWillPowers")},cantrips:{powerMode:0,name:e.api.Utils.i18n("tokenActionHud.sw5e.cantrips")},"innate-powers":{powerMode:"innate",name:e.api.Utils.i18n("tokenActionHud.sw5e.innatePowers")},"pact-powers":{powerMode:"pact",name:e.api.Utils.i18n("tokenActionHud.sw5e.pactPowers")}},d=["1","2","3","4","5","6","7","8","9","pact"];for(const e of this.powergroupIds){const i=c[e].powerMode,a=c[e].name;if(!s.has(e))continue;const o="pact"===i?n[1]:l.find((e=>e[0]===`power${i}`))?.[1],r=o?.value,p=o?.max,u=o?.slotAvailable;if(!u&&d.includes(i))continue;const m={};m.info1={class:"tah-spotlight",text:p>=0?`${r}/${p}`:""};const h={id:e,name:a,type:"system",info:m};this.addGroupInfo(h);const y=s.get(e);this._buildActions(y,h,t),this.activationgroupIds&&this.buildActivations(y,h,t)}}_buildUtility(){if(0===this.actors.length)return;if(!this.actors.every((e=>"character"===e.type)))return;const t="utility",s={deathSave:{name:e.api.Utils.i18n("SW5E.DeathSave")},inspiration:{name:e.api.Utils.i18n("SW5E.Inspiration")}};(!this.actor||this.actor.system.attributes.hp.value>0)&&delete s.deathSave;const n=Object.entries(s).map((s=>{const n=s[0],l=s[1].name,a=`${`${e.api.Utils.i18n(i[t])}: `??""}${l}`,o=[t,n].join(this.delimiter);let c="";if("inspiration"===s[0]){c=`toggle${this.actors.every((e=>e.system.attributes?.inspiration))?" active":""}`}return{id:n,name:l,encodedValue:o,cssClass:c,listName:a}}));this.addActions(n,{id:"utility",type:"system"})}_buildActions(e,t,s="item"){if(0===e.size)return;if(!("string"==typeof t?t:t?.id))return;const i=[...e].map((e=>this._getAction(s,e[1])));this.addActions(i,t)}_getAction(t,s){const n=s.id??s._id;let l=s?.name??s?.label;s?.system?.recharge&&!s?.system?.recharge?.charged&&s?.system?.recharge?.value&&(l+=` (${e.api.Utils.i18n("SW5E.Recharge")})`);const a=`${`${e.api.Utils.i18n(i[t])}: `??""}${l}`;let o="";if(Object.hasOwn(s,"disabled")){o=`toggle${s.disabled?"":" active"}`}const c=[t,n].join(this.delimiter),d=e.api.Utils.getImage(s),r=this._getActivationTypeIcon(s?.system?.activation?.type);let p=null,u=null;"power"===s.type?(p=this._getPreparedIcon(s),this.displayPowerInfo&&(u=this._getPowerInfo(s))):u=this._getItemInfo(s);const m=u?.info1,h=u?.info2,y=u?.info3;return{id:n,name:l,encodedValue:c,cssClass:o,img:d,icon1:r,icon2:p,info1:m,info2:h,info3:y,listName:a}}_isActiveItem(e){if(this.showItemsWithoutActivationCosts)return!0;const t=Object.keys(game.sw5e.config.abilityActivationTypes).filter((e=>"none"!==e)),s=e.system.activation,i=s?.type;return!(!s||!t.includes(i))}_isEquippedItem(e){const t=e.type;if(this.showUnequippedItems&&!["consumable","power","feat"].includes(t))return!0;return!(!e.system.equipped||"consumable"===t)}_isUsableItem(e){if(this.showUnchargedItems)return!0;return!!e.system.uses}_isUsablePower(e){if("character"!==this.actorType&&this.showUnequippedItems)return!0;const t=e.system.preparation.prepared;if(this.showUnpreparedPowers)return!0;const s=e.system.level,i=Object.keys(game.sw5e.config.powerPreparationModes).filter((e=>"prepared"!==e)),n=e.system.preparation.mode;return!(0!==s&&!i.includes(n)&&!t)}_getItemInfo(e){return{info1:{text:this._getQuantityData(e)},info2:{text:this._getUsesData(e)},info3:{text:this._getConsumeData(e)}}}_getPowerInfo(t){const s=t.system.components,i=[],n={},l={},a={};if(s?.vocal&&i.push(e.api.Utils.i18n("SW5E.ComponentVerbal")),s?.somatic&&i.push(e.api.Utils.i18n("SW5E.ComponentSomatic")),s?.material&&i.push(e.api.Utils.i18n("SW5E.ComponentMaterial")),i.length&&(n.title=i.join(", "),n.text=i.map((e=>e.charAt(0).toUpperCase())).join("")),s?.concentration){const t=e.api.Utils.i18n("SW5E.Concentration");l.title=t,l.text=t.charAt(0).toUpperCase()}if(s?.ritual){const t=e.api.Utils.i18n("SW5E.Ritual");a.title=t,a.text=t.charAt(0).toUpperCase()}return{info1:n,info2:l,info3:a}}_getActors(){const e=["character","npc"],t=canvas.tokens.controlled.filter((e=>e.actor)).map((e=>e.actor));return t.every((t=>e.includes(t.type)))?t:[]}_getTokens(){const e=["character","npc"],t=canvas.tokens.controlled;return t.filter((e=>e.actor)).map((e=>e.actor)).every((t=>e.includes(t.type)))?t:[]}_getQuantityData(e){const t=e?.system?.quantity??0;return t>1?t:""}_getUsesData(e){const t=e?.system?.uses;return t&&(t.value>0||t.max>0)?`${t.value??"0"}${t.max>0?`/${t.max}`:""}`:""}_getConsumeData(e){const t=e?.system?.consume?.target,s=e?.system?.consume?.type;if("attribute"===s){const e=t.substr(0,t.lastIndexOf(".")),s=this.actor.system[e];return s?`${s.value??"0"}${s.max?`/${s.max}`:""}`:""}const i=this.items.get(t);if("charges"===s){const e=i?.system.uses;return e?.value?`${e.value}${e.max?`/${e.max}`:""}`:""}return i?.system?.quantity??""}_discardSlowItems(e){if(r.getSetting("showSlowActions"))return e;const t=["minute","hour","day"],s=new Map;for(const[i,n]of e.entries()){const e=n.system.activation,l=n.system.activation?.type;e&&!t.includes(l)&&s.set(i,n)}return s}_getProficiencyIcon(e){const t=CONFIG.SW5E.proficiencyLevels[e]??"",s=c[e];if(s)return`<i class="${s}" title="${t}"></i>`}_getActivationTypeIcon(e){const t=CONFIG.SW5E.abilityActivationTypes[e]??"",s=n[e];if(s)return`<i class="${s}" title="${t}"></i>`}_getPreparedIcon(t){const s=t.system.level,i=t.system.preparation.mode,n=t.system.preparation.prepared,l=n?"fas fa-sun":"fas fa-sun tah-icon-disabled",a=n?e.api.Utils.i18n("SW5E.PowerPrepared"):e.api.Utils.i18n("SW5E.PowerUnprepared");return"prepared"===i&&0!==s?`<i class="${l}" title="${a}"></i>`:""}}}));let u=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{const t=d;Object.values(t).forEach((t=>{t.name=e.api.Utils.i18n(t.name),t.listName=`Group: ${e.api.Utils.i18n(t.name)}`}));const s=Object.values(t);u={layout:[{nestId:"inventory",id:"inventory",name:e.api.Utils.i18n("SW5E.Inventory"),groups:[{...t.weapons,nestId:"inventory_weapons"},{...t.equipment,nestId:"inventory_equipment"},{...t.consumables,nestId:"inventory_consumables"},{...t.tools,nestId:"inventory_tools"},{...t.containers,nestId:"inventory_containers"},{...t.loot,nestId:"inventory_loot"}]},{nestId:"features",id:"features",name:e.api.Utils.i18n("SW5E.Features"),groups:[{...t.activeFeatures,nestId:"features_active-features"},{...t.passiveFeatures,nestId:"features_passive-features"}]},{nestId:"powers",id:"powers",name:e.api.Utils.i18n("ITEM.TypePowerPl"),groups:[{...t.atWillPowers,nestId:"powers_at-will-powers"},{...t.innatePowers,nestId:"powers_innate-powers"},{...t.pactPowers,nestId:"powers_pact-powers"},{...t.cantrips,nestId:"powers_cantrips"},{...t._1stLevelPowers,nestId:"powers_1st-level-powers"},{...t._2ndLevelPowers,nestId:"powers_2nd-level-powers"},{...t._3rdLevelPowers,nestId:"powers_3rd-level-powers"},{...t._4thLevelPowers,nestId:"powers_4th-level-powers"},{...t._5thLevelPowers,nestId:"powers_5th-level-powers"},{...t._6thLevelPowers,nestId:"powers_6th-level-powers"},{...t._7thLevelPowers,nestId:"powers_7th-level-powers"},{...t._8thLevelPowers,nestId:"powers_8th-level-powers"},{...t._9thLevelPowers,nestId:"powers_9th-level-powers"}]},{nestId:"attributes",id:"attributes",name:e.api.Utils.i18n("SW5E.Attributes"),groups:[{...t.abilities,nestId:"attributes_abilities"},{...t.skills,nestId:"attributes_skills"}]},{nestId:"effects",id:"effects",name:e.api.Utils.i18n("SW5E.Effects"),groups:[{...t.temporaryEffects,nestId:"effects_temporary-effects"},{...t.passiveEffects,nestId:"effects_passive-effects"}]},{nestId:"conditions",id:"conditions",name:e.api.Utils.i18n("tokenActionHud.sw5e.conditions"),groups:[{...t.conditions,nestId:"conditions_conditions"}]},{nestId:"utility",id:"utility",name:e.api.Utils.i18n("tokenActionHud.utility"),groups:[{...t.combat,nestId:"utility_combat"},{...t.token,nestId:"utility_token"},{...t.rests,nestId:"utility_rests"},{...t.utility,nestId:"utility_utility"}]}],groups:s}}));let m=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{m=class MagicItemActionListExtender extends e.api.ActionListExtender{constructor(e){super(e.categoryManager),this.actionHandler=e,this.categoryManager=e.categoryManager,this.actor=null}extendActionList(){if(this.actor=this.actionHandler.actor,!this.actor)return;const t=MagicItems.actor(this.actor.id);if(!t)return;const s=t.items??[];if(0===s.length)return;const i={id:"magic-items",type:"system"};s.forEach((t=>{if(t.attuned&&!this._isItemAttuned(t))return;if(t.equipped&&!this._isItemEquipped(t))return;const s={id:`magic-items_${t.id}`,name:t.name,type:"system-derived",info1:`${t.uses}/${t.charges}`};this.actionHandler.addGroup(s,i);const n=t.ownedEntries.map((s=>{const i=s.item,n=i.id;return{id:n,name:i.name,encodedValue:["magicItem",`${t.id}>${n}`].join("|"),img:e.api.Utils.getImage(i),info1:i.consumption,info2:i.baseLevel?`${e.api.Utils.i18n("SW5E.AbbreviationLevel")} ${i.baseLevel}`:"",selected:!0}}));this.actionHandler.addActions(n,s)}))}_isItemEquipped(e){return e.item.system.equipped}_isItemAttuned(e){return e.item.system.attunment!==(CONFIG.SW5E.attunementTypes?.REQUIRED??1)}}}));let h=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{h=class RollHandler extends e.api.RollHandler{async doHandleActionEvent(e,t){const s=t.split("|");2!==s.length&&super.throwInvalidValueErr();const i=s[0],n=s[1];if(this.actor)await this._handleMacros(e,i,this.actor,this.token,n);else for(const t of canvas.tokens.controlled){const s=t.actor;await this._handleMacros(e,i,s,t,n)}}async _handleMacros(e,t,s,i,n){switch(t){case"ability":this._rollAbility(e,s,n);break;case"check":this._rollAbilityTest(e,s,n);break;case"save":this._rollAbilitySave(e,s,n);break;case"condition":if(!i)return;await this._toggleCondition(e,i,n);break;case"effect":await this._toggleEffect(e,s,n);break;case"feature":case"item":case"power":case"weapon":this.isRenderItem()?this.doRenderItem(s,n):this._useItem(e,s,n);break;case"magicItem":this._rollMagicItem(s,n);break;case"skill":this._rollSkill(e,s,n);break;case"utility":await this._performUtilityMacro(e,s,i,n)}}_rollAbility(e,t,s){t&&t.system?.abilities&&t.rollAbility(s,{event:e})}_rollAbilitySave(e,t,s){t&&t.system?.abilities&&t.rollAbilitySave(s,{event:e})}_rollAbilityTest(e,t,s){t&&t.system?.abilities&&t.rollAbilityTest(s,{event:e})}_rollMagicItem(e,t){const s=t.split(">"),i=s[0],n=s[1];MagicItems.actor(e.id).roll(i,n),Hooks.callAll("forceUpdateTokenActionHud")}_rollSkill(e,t,s){t&&t.system?.skills&&t.rollSkill(s,{event:e})}_useItem(t,s,i){const n=e.api.Utils.getItem(s,i);if(!this._needsRecharge(n))return n.use({event:t});n.rollRecharge()}_needsRecharge(e){return e.system.recharge&&!e.system.recharge.charged&&e.system.recharge.value}async _performUtilityMacro(e,t,s,i){switch(i){case"deathSave":t.rollDeathSave({event:e});break;case"endTurn":if(!s)break;game.combat?.current?.tokenId===s.id&&await(game.combat?.nextTurn());break;case"initiative":await this._rollInitiative(t);break;case"inspiration":{const e=!t.system.attributes.inspiration;t.update({"data.attributes.inspiration":e});break}case"longRest":t.longRest();break;case"shortRest":t.shortRest()}Hooks.callAll("forceUpdateTokenActionHud")}async _rollInitiative(e){e&&(await e.rollInitiative({createCombatants:!0}),Hooks.callAll("forceUpdateTokenActionHud"))}async _toggleCondition(e,t,s,i=null){if(!t)return;const n=this.isRightClick(e);if(game.dfreds&&i?.flags?.isConvenient){const e=i.label;game.dfreds.effectInterface._toggleEffect(e)}else{const e=this.findCondition(s);if(!e)return;n?await t.toggleEffect(e,{overlay:!0}):await t.toggleEffect(e)}Hooks.callAll("forceUpdateTokenActionHud")}findCondition(e){return CONFIG.statusEffects.find((t=>t.id===e))}async _toggleEffect(e,t,s){const i=("find"in t.effects.entries?t.effects.entries:t.effects).find((e=>e.id===s));if(!i)return;this.isRightClick(e)?await i.delete():await i.update({disabled:!i.disabled}),Hooks.callAll("forceUpdateTokenActionHud")}}}));class RollHandlerObsidian extends h{_rollAbilityTest(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"abl",abl:t})}_rollAbilitySave(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"save",save:t})}_rollSkill(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"skl",skl:t})}_useItem(e,t){OBSIDIAN.Items.roll(super.actor,{roll:"item",id:t})}}function register(t){game.settings.register(e.ID,"abbreviateSkills",{name:game.i18n.localize("tokenActionHud.sw5e.settings.abbreviateSkills.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.abbreviateSkills.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showSlowActions",{name:game.i18n.localize("tokenActionHud.sw5e.settings.showSlowActions.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.showSlowActions.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}}),game.settings.register(e.ID,"displayPowerInfo",{name:game.i18n.localize("tokenActionHud.sw5e.settings.displayPowerInfo.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.displayPowerInfo.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnchargedItems",{name:game.i18n.localize("tokenActionHud.sw5e.settings.showUnchargedItems.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.showUnchargedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnequippedItems",{name:game.i18n.localize("tokenActionHud.sw5e.settings.showUnequippedItems.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.showUnequippedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showUnpreparedPowers",{name:game.i18n.localize("tokenActionHud.sw5e.settings.showUnpreparedPowers.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.showUnpreparedPowers.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}}),game.settings.register(e.ID,"showItemsWithoutActivationCosts",{name:game.i18n.localize("tokenActionHud.sw5e.settings.showItemsWithoutActivationCosts.name"),hint:game.i18n.localize("tokenActionHud.sw5e.settings.showItemsWithoutActivationCosts.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:e=>{t(e)}})}let y=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{y=class SystemManager extends e.api.SystemManager{doGetCategoryManager(){return new e.api.CategoryManager}doGetActionHandler(t){const s=new p(t);return e.api.Utils.isModuleActive("magicitems")&&s.addFurtherActionHandler(new m(s)),s}getAvailableRollHandlers(){let t="Core D&D5e";e.api.Utils.isModuleActive("midi-qol")&&(t+=` [supports ${e.api.Utils.getModuleTitle("midi-qol")}]`);const s={core:t};return e.api.SystemManager.addHandler(s,"obsidian"),s}doGetRollHandler(e){let t;if("obsidian"===e)t=new RollHandlerObsidian;else t=new h;return t}doRegisterSettings(e){register(e)}async doRegisterDefaultFlags(){const t=u;if(game.modules.get("magicitems")?.active){const s=e.api.Utils.i18n("tokenActionHud.sw5e.magicItems");t.groups.push({id:"magic-items",name:s,listName:`Group: ${s}`,type:"system"}),t.groups.sort(((e,t)=>e.id.localeCompare(t.id)))}return t}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(e.ID);t.api={requiredCoreModuleVersion:"1.4",SystemManager:y},Hooks.call("tokenActionHudSystemReady",t)}));export{i as ACTION_TYPE,n as ACTIVATION_TYPE_ICON,p as ActionHandler,l as CONCENTRATION_ICON,t as CORE_MODULE,u as DEFAULTS,d as GROUP,e as MODULE,m as MagicItemActionListExtender,a as PREPARED_ICON,c as PROFICIENCY_LEVEL_ICON,s as REQUIRED_CORE_MODULE_VERSION,o as RITUAL_ICON,h as RollHandler,RollHandlerObsidian,y as SystemManager,r as Utils,register};
